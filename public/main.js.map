{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/imdb/imdb.component.css","webpack:///./src/app/imdb/imdb.component.html","webpack:///./src/app/imdb/imdb.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ImdbComponent } from '../imdb/imdb.component';\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', component: ImdbComponent },\n  { path: ':id', component: ImdbComponent },\n\n  { path: '**', pathMatch: 'full', redirectTo: '/' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  constructor(private _titleService: Title){}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\n\nimport { HttpService } from './http.service';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { ImdbComponent } from './imdb/imdb.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImdbComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n\n    FontAwesomeModule,\n\n    MatCardModule,\n    MatButtonModule,\n\n    BrowserAnimationsModule,\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private http: HttpClient){}\n\n  getIMDb(imdb:any):any{\n    return this.http.get('https://imdb.ryanfredrickson.pw/json/'+imdb+'.json');\n  }\n}\n","module.exports = \"img{\\n  padding: 0;\\n}\\n\\nmat-card-title{\\n  font-size: 28px !important;\\n  font-weight: bold;\\n}\\n\\nmat-grid-tile{\\n  padding: 0;\\n  margin: 0;\\n  vertical-align: top;\\n}\\n\\n.plot{\\n  vertical-align: top;\\n  display: inline-block;\\n}\\n\\n@media only screen and (min-width: 850px){\\n  mat-card{\\n    width: 50vw;\\n    margin: 5vh auto;\\n  }\\n\\n  img{\\n    width: 200px;\\n    padding: 0;\\n    margin: 0 auto !important;\\n\\n    display: inline-block;\\n    float: right;\\n  }\\n}\\n\"","module.exports = \"<mat-card *ngIf=\\\"data\\\" (window:resize)=\\\"onResize($event)\\\">\\n  <mat-card-header>\\n    <mat-card-title>{{data.Title}}</mat-card-title>\\n    <mat-card-subtitle>\\n      {{data.Type}} | {{data.Year}} | {{data.Rated}} | {{data.Genres}} | {{data.Rating}} based on {{data.Votes}} votes\\n    </mat-card-subtitle>\\n  </mat-card-header>\\n\\n  <img mat-card-image [src]=\\\"data.Poster\\\" [alt]=\\\"data.Title\\\" *ngIf=\\\"mobile\\\">\\n\\n  <mat-card-content>\\n    <span>{{data.Plot}}</span>\\n  </mat-card-content>\\n\\n  <mat-card-actions>\\n    <button mat-button (click)=\\\"openLink()\\\">IMDb</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-imdb',\n  templateUrl: './imdb.component.html',\n  styleUrls: ['./imdb.component.css']\n})\nexport class ImdbComponent implements OnInit {\n  data:any;\n  id:any = 'tt1839578';\n\n  mobile:boolean = false;\n\n  constructor(private _httpService: HttpService, private _titleService: Title, private router: Router, private route: ActivatedRoute){\n    this.route.params.subscribe(params => {\n      if(params['id']){\n        this.id = params['id'];\n      }\n    });\n\n    this.data = {};\n\n    var resp = this._httpService.getIMDb(this.id);\n    resp.subscribe(data => {\n      this.data = data;\n      this.data.Year = this.data.Year.replace(/&ndash;/g, \"-\");\n      this.data.Type = this.data.Type == \"series\" ? \"TV\" : this.data.Type.slice(0, 1).toUpperCase() + this.data.Type.slice(1);\n\n      this.onResize();\n\n      this.setTitle(this.data.Title + \" (\" + this.data.Year + \")\");\n    });\n  }\n\n  ngOnInit(){}\n\n  setTitle(title:any){\n    this._titleService.setTitle(title);\n  }\n\n  openLink(){\n    window.open('https://imdb.com/title/'+this.id, '_blank');\n  }\n\n  onResize(event=\"\"){\n    if(window.innerWidth < 850){\n      this.mobile = true;\n    }else{\n      this.mobile = false;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}